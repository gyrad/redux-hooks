{"version":3,"sources":["components/Counter/Counter.js","actions/index.js","actions/types.js","components/App/App.js","reducers/countersReducer.js","reducers/index.js","index.js"],"names":["Counter","_ref","id","count","dispatch","useDispatch","react_default","a","createElement","className","onClick","type","payload","decrement","increment","resetCounter","document","activeElement","blur","removeCounter","App","renderCounters","useSelector","state","counters","map","counter","components_Counter_Counter","key","uuid","countersReducer","arguments","length","undefined","action","concat","Object","toConsumableArray","filter","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","render","es","components_App_App","getElementById"],"mappings":"sPAiDeA,SAtCC,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,GAAIC,EAAYF,EAAZE,MACfC,EAAWC,cAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,mBACVC,QAAS,kBAAMN,ECDE,SAAAF,GACvB,MAAO,CACLS,KClBqB,YDmBrBC,QAASV,GDFmBW,CAAUX,MAElCI,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAhB,OAAyCN,EAAzC,QACAG,EAAAC,EAAAC,cAAA,UACEC,UAAU,mBACVC,QAAS,kBAAMN,ECfE,SAAAF,GACvB,MAAO,CACLS,KCZqB,YDarBC,QAASV,GDYmBY,CAAUZ,MAElCI,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAChBH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACEE,QAAS,WACPN,ECGY,SAAAF,GAC1B,MAAO,CACLS,KCpCyB,gBDqCzBC,QAASV,GDNYa,CAAab,IACtBc,SAASC,cAAcC,SAH3B,iBAQAZ,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAMN,ECVF,SAAAF,GAC3B,MAAO,CACLS,KC9B0B,iBD+B1BC,QAASV,GDO2BiB,CAAcjB,MAA1C,wBGTGkB,SAzBH,WACV,IAAMhB,EAAWC,cAOXgB,EANWC,YAAY,SAAAC,GAAK,OAAIA,EAAMC,WAMZC,IAAI,SAAAC,GAAO,OACzCpB,EAAAC,EAAAC,cAACmB,EAAD,CAASC,IAAKF,EAAQxB,GAAIA,GAAIwB,EAAQxB,GAAIC,MAAOuB,EAAQvB,UAG3D,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBC,QAZrB,WACxBN,EFaK,CACLO,KCxBuB,cDyBvBC,QAASiB,UEJL,kBAIDR,oBCaQS,EAhCS,WAA2B,IAA1BN,EAA0BO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOvB,MACb,IFRuB,cESrB,OAAQ,CAAET,GAAIgC,EAAOtB,QAAST,MAAO,IAArCgC,OAAAC,OAAAC,EAAA,EAAAD,CAA6CZ,IAC/C,IFZqB,YEanB,OAAOA,EAASC,IAAI,SAAAC,GAIlB,OAHIA,EAAQxB,KAAOgC,EAAOtB,UACxBc,EAAQvB,OAAS,GAEZuB,IAEX,IFlBqB,YEmBnB,OAAOF,EAASC,IAAI,SAAAC,GAIlB,OAHIA,EAAQxB,KAAOgC,EAAOtB,UACxBc,EAAQvB,OAAS,GAEZuB,IAEX,IFvB0B,iBEwBxB,OAAOF,EAASc,OAAO,SAAAZ,GAAO,OAAIA,EAAQxB,KAAOgC,EAAOtB,UAC1D,IFxByB,gBEyBvB,OAAOY,EAASC,IAAI,SAAAC,GAIlB,OAHIA,EAAQxB,KAAOgC,EAAOtB,UACxBc,EAAQvB,MAAQ,GAEXuB,IAEX,QACE,OAAOF,IC7BEe,EAJKC,YAAgB,CAClChB,SAAUM,ICKNW,SAAQC,YACZH,EACAI,OAAOC,8BAAgCD,OAAOC,iCAGhDC,iBACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAUL,MAAOA,GACfnC,EAAAC,EAAAC,cAACuC,EAAD,OAEF/B,SAASgC,eAAe","file":"static/js/main.34d4ad8f.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  increment,\n  decrement,\n  removeCounter,\n  resetCounter\n} from '../../actions';\n\nimport './Counter.scss';\n\nconst Counter = ({ id, count }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"Counter\">\n      <button\n        className=\"Counter__set-btn\"\n        onClick={() => dispatch(decrement(id))}\n      >\n        <span> - </span>\n      </button>\n      <span className=\"Counter__number\">&nbsp;{count}&nbsp;</span>\n      <button\n        className=\"Counter__set-btn\"\n        onClick={() => dispatch(increment(id))}\n      >\n        <span> + </span>\n      </button>\n      <div className=\"Counter__action-btns\">\n        <button className=\"vertical-dots-btn\">\n          <span>&#8942;</span>\n          <ul>\n            <li\n              onClick={() => {\n                dispatch(resetCounter(id));\n                document.activeElement.blur();\n              }}\n            >\n              Reset Counter\n            </li>\n            <li onClick={() => dispatch(removeCounter(id))}>Delete Counter</li>\n          </ul>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import uuid from 'uuid';\n\nimport {\n  INCREMENT,\n  DECREMENT,\n  ADD_COUNTER,\n  REMOVE_COUNTER,\n  RESET_COUNTER\n} from './types';\n\nexport const increment = id => {\n  return {\n    type: INCREMENT,\n    payload: id\n  };\n};\n\nexport const decrement = id => {\n  return {\n    type: DECREMENT,\n    payload: id\n  };\n};\n\nexport const addCounter = () => {\n  return {\n    type: ADD_COUNTER,\n    payload: uuid()\n  };\n};\n\nexport const removeCounter = id => {\n  return {\n    type: REMOVE_COUNTER,\n    payload: id\n  };\n};\n\nexport const resetCounter = id => {\n  return {\n    type: RESET_COUNTER,\n    payload: id\n  };\n};\n","export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const ADD_COUNTER = 'ADD_COUNTER';\nexport const REMOVE_COUNTER = 'REMOVE_COUNTER';\nexport const RESET_COUNTER = 'RESET_COUNTER';\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Counter from '../Counter/Counter';\nimport { addCounter } from '../../actions';\n\nimport './App.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const counters = useSelector(state => state.counters);\n\n  const addCounterHandler = () => {\n    dispatch(addCounter());\n  };\n\n  const renderCounters = counters.map(counter => (\n    <Counter key={counter.id} id={counter.id} count={counter.count} />\n  ));\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        <h1> Counter App</h1>\n        <button className=\"App__add-counter-btn\" onClick={addCounterHandler}>\n          + Add Counter\n        </button>\n      </div>\n      {renderCounters}\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  INCREMENT,\n  DECREMENT,\n  ADD_COUNTER,\n  REMOVE_COUNTER,\n  RESET_COUNTER\n} from '../actions/types';\n\nconst countersReducer = (counters = [], action) => {\n  switch (action.type) {\n    case ADD_COUNTER:\n      return [{ id: action.payload, count: 0 }, ...counters];\n    case INCREMENT:\n      return counters.map(counter => {\n        if (counter.id === action.payload) {\n          counter.count += 1;\n        }\n        return counter;\n      });\n    case DECREMENT:\n      return counters.map(counter => {\n        if (counter.id === action.payload) {\n          counter.count -= 1;\n        }\n        return counter;\n      });\n    case REMOVE_COUNTER:\n      return counters.filter(counter => counter.id !== action.payload);\n    case RESET_COUNTER:\n      return counters.map(counter => {\n        if (counter.id === action.payload) {\n          counter.count = 0;\n        }\n        return counter;\n      });\n    default:\n      return counters;\n  }\n};\n\nexport default countersReducer;\n","import { combineReducers } from 'redux';\nimport countersReducer from './countersReducer';\n\nconst rootReducer = combineReducers({\n  counters: countersReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App/App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\n\nimport './index.scss';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}